{"ast":null,"code":"export const ActionTypes = {\n  AGREGAR_INGREDIENTE: 'AGREGAR_INGREDIENTE',\n  REMOVER_INGREDIENTE: 'REMOVER_INGREDIENTE'\n};\nexport const agregarIngrediente = nombre => ({\n  type: ActionTypes.AGREGAR_INGREDIENTE,\n  payload: nombre\n});\nexport const creadorPizzaReducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.AGREGAR_INGREDIENTE:\n      const {\n        ingredientes,\n        pizza\n      } = state;\n      const ingrediente = ingredientes.filter(({\n        nombre\n      }) => nombre === action.payload);\n      return { ...state,\n        ingredientes: ingredientes.filter(({\n          nombre\n        }) => nombre !== action.payload),\n        pizza: { ...pizza,\n          ingredientes: [...pizza.ingredientes, ...ingrediente]\n        }\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/marlrus/webDev/habi/la-pizzeria-cosmica/src/components/creador-pizza/creador-pizza.reducer.ts"],"names":["ActionTypes","AGREGAR_INGREDIENTE","REMOVER_INGREDIENTE","agregarIngrediente","nombre","type","payload","creadorPizzaReducer","state","action","ingredientes","pizza","ingrediente","filter"],"mappings":"AAGA,OAAO,MAAMA,WAAW,GAAG;AAC1BC,EAAAA,mBAAmB,EAAE,qBADK;AAE1BC,EAAAA,mBAAmB,EAAE;AAFK,CAApB;AAKP,OAAO,MAAMC,kBAAkB,GAAIC,MAAD,KAAqB;AACtDC,EAAAA,IAAI,EAAEL,WAAW,CAACC,mBADoC;AAEtDK,EAAAA,OAAO,EAAEF;AAF6C,CAArB,CAA3B;AAOP,OAAO,MAAMG,mBAAmB,GAAG,CAClCC,KADkC,EAElCC,MAFkC,KAG9B;AACJ,UAAQA,MAAM,CAACJ,IAAf;AACC,SAAKL,WAAW,CAACC,mBAAjB;AACC,YAAM;AAAES,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,UAA0BH,KAAhC;AACA,YAAMI,WAAW,GAAGF,YAAY,CAACG,MAAb,CACnB,CAAC;AAAET,QAAAA;AAAF,OAAD,KAAgBA,MAAM,KAAKK,MAAM,CAACH,OADf,CAApB;AAGA,aAAO,EACN,GAAGE,KADG;AAENE,QAAAA,YAAY,EAAEA,YAAY,CAACG,MAAb,CACb,CAAC;AAAET,UAAAA;AAAF,SAAD,KAAgBA,MAAM,KAAKK,MAAM,CAACH,OADrB,CAFR;AAKNK,QAAAA,KAAK,EAAE,EACN,GAAGA,KADG;AAEND,UAAAA,YAAY,EAAE,CAAC,GAAGC,KAAK,CAACD,YAAV,EAAwB,GAAGE,WAA3B;AAFR;AALD,OAAP;;AAUD;AACC,aAAOJ,KAAP;AAjBF;AAmBA,CAvBM","sourcesContent":["import { CreadorPizzaState } from './pizza.types';\nimport { type } from 'os';\n\nexport const ActionTypes = {\n\tAGREGAR_INGREDIENTE: 'AGREGAR_INGREDIENTE',\n\tREMOVER_INGREDIENTE: 'REMOVER_INGREDIENTE',\n} as const;\n\nexport const agregarIngrediente = (nombre: string) => ({\n\ttype: ActionTypes.AGREGAR_INGREDIENTE,\n\tpayload: nombre,\n});\n\ntype CreadorActions = ReturnType<typeof agregarIngrediente>;\n\nexport const creadorPizzaReducer = (\n\tstate: CreadorPizzaState,\n\taction: CreadorActions,\n) => {\n\tswitch (action.type) {\n\t\tcase ActionTypes.AGREGAR_INGREDIENTE:\n\t\t\tconst { ingredientes, pizza } = state;\n\t\t\tconst ingrediente = ingredientes.filter(\n\t\t\t\t({ nombre }) => nombre === action.payload,\n\t\t\t);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tingredientes: ingredientes.filter(\n\t\t\t\t\t({ nombre }) => nombre !== action.payload,\n\t\t\t\t),\n\t\t\t\tpizza: {\n\t\t\t\t\t...pizza,\n\t\t\t\t\tingredientes: [...pizza.ingredientes, ...ingrediente],\n\t\t\t\t},\n\t\t\t} as CreadorPizzaState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}