{"ast":null,"code":"import { generarNombrePizza } from '../../utils/utils';\nexport const ActionTypes = {\n  AGREGAR_INGREDIENTE: 'AGREGAR_INGREDIENTE',\n  REMOVER_INGREDIENTE: 'REMOVER_INGREDIENTE',\n  ACTUALIZAR_PRECIO: 'ACTUALIZAR_PRECIO',\n  RECUPERAR_PIZZA: 'RECUPERAR_PIZZA',\n  LIMPIAR_PEDIDO: 'LIMPIAR_PEDIDO'\n};\nexport const agregarIngrediente = (nombre, precio) => ({\n  type: ActionTypes.AGREGAR_INGREDIENTE,\n  payload: {\n    nombre,\n    precio\n  }\n});\nexport const removerIngrediente = (nombre, precio) => ({\n  type: ActionTypes.REMOVER_INGREDIENTE,\n  payload: {\n    nombre,\n    precio\n  }\n});\nexport const actualizarPrecio = {\n  type: ActionTypes.ACTUALIZAR_PRECIO\n};\nexport const recuperarPizza = state => ({\n  type: ActionTypes.RECUPERAR_PIZZA,\n  payload: state\n});\nexport const limpiarPedido = {\n  type: ActionTypes.LIMPIAR_PEDIDO\n};\n\nconst precioPizza = ingredientes => {\n  const precio = ingredientes.reduce((total, ingrediente) => total += ingrediente.precio, 0);\n  console.log({\n    precio\n  });\n  return precio;\n};\n\nexport const creadorPizzaReducer = (state, action) => {\n  const {\n    ingredientes,\n    pizza\n  } = state;\n\n  switch (action.type) {\n    case ActionTypes.AGREGAR_INGREDIENTE:\n      {\n        const ingrediente = ingredientes.filter(({\n          nombre\n        }) => nombre === action.payload.nombre);\n        const ingredientesPizza = [...pizza.ingredientes, ...ingrediente];\n        return { ...state,\n          ingredientes: ingredientes.map(ingrediente => ingrediente.nombre === action.payload.nombre ? { ...ingrediente,\n            seleccionado: !ingrediente.seleccionado\n          } : ingrediente),\n          pizza: { ...pizza,\n            ingredientes: ingredientesPizza,\n            precio: pizza.precio + action.payload.precio,\n            nombre: generarNombrePizza(ingredientesPizza)\n          }\n        };\n      }\n\n    case ActionTypes.REMOVER_INGREDIENTE:\n      {\n        if (action.payload.nombre === 'masa') return state;\n        const ingredientesPizza = pizza.ingredientes.filter(({\n          nombre\n        }) => nombre !== action.payload.nombre);\n        return { ...state,\n          ingredientes: ingredientes.map(ingrediente => ingrediente.nombre === action.payload.nombre ? { ...ingrediente,\n            seleccionado: !ingrediente.seleccionado\n          } : ingrediente),\n          pizza: { ...pizza,\n            ingredientes: ingredientesPizza,\n            precio: pizza.precio - action.payload.precio,\n            nombre: ingredientesPizza.length > 1 ? generarNombrePizza(ingredientesPizza) : ''\n          }\n        };\n      }\n\n    case ActionTypes.ACTUALIZAR_PRECIO:\n      return { ...state,\n        pizza: { ...pizza,\n          precio: precioPizza(state.pizza.ingredientes)\n        }\n      };\n\n    case ActionTypes.RECUPERAR_PIZZA:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/marlrus/webDev/habi/la-pizzeria-cosmica/src/components/creador-pizza/creador-pizza.reducer.ts"],"names":["generarNombrePizza","ActionTypes","AGREGAR_INGREDIENTE","REMOVER_INGREDIENTE","ACTUALIZAR_PRECIO","RECUPERAR_PIZZA","LIMPIAR_PEDIDO","agregarIngrediente","nombre","precio","type","payload","removerIngrediente","actualizarPrecio","recuperarPizza","state","limpiarPedido","precioPizza","ingredientes","reduce","total","ingrediente","console","log","creadorPizzaReducer","action","pizza","filter","ingredientesPizza","map","seleccionado","length"],"mappings":"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","sourcesContent":["import { CreadorPizzaState } from './pizza.types';\nimport { Reducer } from 'react';\nimport { generarNombrePizza } from '../../utils/utils';\n\nexport const ActionTypes = {\n\tAGREGAR_INGREDIENTE: 'AGREGAR_INGREDIENTE',\n\tREMOVER_INGREDIENTE: 'REMOVER_INGREDIENTE',\n\tACTUALIZAR_PRECIO: 'ACTUALIZAR_PRECIO',\n\tRECUPERAR_PIZZA: 'RECUPERAR_PIZZA',\n\tLIMPIAR_PEDIDO: 'LIMPIAR_PEDIDO',\n} as const;\n\nexport const agregarIngrediente = (nombre: string, precio: number) => ({\n\ttype: ActionTypes.AGREGAR_INGREDIENTE,\n\tpayload: { nombre, precio },\n});\n\nexport const removerIngrediente = (nombre: string, precio: number) => ({\n\ttype: ActionTypes.REMOVER_INGREDIENTE,\n\tpayload: { nombre, precio },\n});\n\nexport const actualizarPrecio = {\n\ttype: ActionTypes.ACTUALIZAR_PRECIO,\n};\n\nexport const recuperarPizza = (state: CreadorPizzaState) => ({\n\ttype: ActionTypes.RECUPERAR_PIZZA,\n\tpayload: state,\n});\n\nexport const limpiarPedido = {\n\ttype: ActionTypes.LIMPIAR_PEDIDO,\n};\n\nconst precioPizza = (ingredientes: { nombre: string; precio: number }[]) => {\n\tconst precio = ingredientes.reduce(\n\t\t(total, ingrediente) => (total += ingrediente.precio),\n\t\t0,\n\t);\n\tconsole.log({ precio });\n\treturn precio;\n};\n\ntype CreadorActions =\n\t| ReturnType<typeof agregarIngrediente>\n\t| ReturnType<typeof removerIngrediente>\n\t| ReturnType<typeof recuperarPizza>\n\t| typeof actualizarPrecio\n\t| typeof limpiarPedido;\n\nexport const creadorPizzaReducer: Reducer<CreadorPizzaState, CreadorActions> = (\n\tstate: CreadorPizzaState,\n\taction: CreadorActions,\n) => {\n\tconst { ingredientes, pizza } = state;\n\tswitch (action.type) {\n\t\tcase ActionTypes.AGREGAR_INGREDIENTE: {\n\t\t\tconst ingrediente = ingredientes.filter(\n\t\t\t\t({ nombre }) => nombre === action.payload.nombre,\n\t\t\t);\n\t\t\tconst ingredientesPizza = [...pizza.ingredientes, ...ingrediente];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tingredientes: ingredientes.map(ingrediente =>\n\t\t\t\t\tingrediente.nombre === action.payload.nombre\n\t\t\t\t\t\t? { ...ingrediente, seleccionado: !ingrediente.seleccionado }\n\t\t\t\t\t\t: ingrediente,\n\t\t\t\t),\n\t\t\t\tpizza: {\n\t\t\t\t\t...pizza,\n\t\t\t\t\tingredientes: ingredientesPizza,\n\t\t\t\t\tprecio: pizza.precio + action.payload.precio,\n\t\t\t\t\tnombre: generarNombrePizza(ingredientesPizza),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\tcase ActionTypes.REMOVER_INGREDIENTE: {\n\t\t\tif (action.payload.nombre === 'masa') return state;\n\t\t\tconst ingredientesPizza = pizza.ingredientes.filter(\n\t\t\t\t({ nombre }) => nombre !== action.payload.nombre,\n\t\t\t);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tingredientes: ingredientes.map(ingrediente =>\n\t\t\t\t\tingrediente.nombre === action.payload.nombre\n\t\t\t\t\t\t? { ...ingrediente, seleccionado: !ingrediente.seleccionado }\n\t\t\t\t\t\t: ingrediente,\n\t\t\t\t),\n\t\t\t\tpizza: {\n\t\t\t\t\t...pizza,\n\t\t\t\t\tingredientes: ingredientesPizza,\n\t\t\t\t\tprecio: pizza.precio - action.payload.precio,\n\t\t\t\t\tnombre:\n\t\t\t\t\t\tingredientesPizza.length > 1\n\t\t\t\t\t\t\t? generarNombrePizza(ingredientesPizza)\n\t\t\t\t\t\t\t: '',\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\tcase ActionTypes.ACTUALIZAR_PRECIO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpizza: {\n\t\t\t\t\t...pizza,\n\t\t\t\t\tprecio: precioPizza(state.pizza.ingredientes),\n\t\t\t\t},\n\t\t\t};\n\t\tcase ActionTypes.RECUPERAR_PIZZA:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}