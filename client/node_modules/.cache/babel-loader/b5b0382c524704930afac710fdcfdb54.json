{"ast":null,"code":"export const ActionTypes = {\n  AGREGAR_INGREDIENTE: 'AGREGAR_INGREDIENTE',\n  REMOVER_INGREDIENTE: 'REMOVER_INGREDIENTE'\n};\nexport const agregarIngrediente = nombre => ({\n  type: ActionTypes.AGREGAR_INGREDIENTE,\n  payload: nombre\n});\nexport const removerIngrediente = nombre => ({\n  type: ActionTypes.REMOVER_INGREDIENTE,\n  payload: nombre\n});\n\nconst precioPizza = ingredientes => {\n  console.log('in precio pizza');\n  ingredientes.reduce((total, ingrediente) => total += ingrediente.precio, 0);\n};\n\nexport const creadorPizzaReducer = (state, action) => {\n  const {\n    ingredientes,\n    pizza\n  } = state;\n\n  switch (action.type) {\n    case ActionTypes.AGREGAR_INGREDIENTE:\n      {\n        const ingrediente = ingredientes.filter(({\n          nombre\n        }) => nombre === action.payload);\n        return { ...state,\n          ingredientes: ingredientes.filter(({\n            nombre\n          }) => nombre !== action.payload),\n          pizza: { ...pizza,\n            ingredientes: [...pizza.ingredientes, ...ingrediente],\n            precio: precioPizza(pizza.ingredientes)\n          }\n        };\n      }\n\n    case ActionTypes.REMOVER_INGREDIENTE:\n      {\n        if (action.payload === 'masa') return state;\n        const ingrediente = ingredientes.filter(({\n          nombre\n        }) => nombre === action.payload);\n        return { ...state,\n          ingredientes: [...ingredientes, ...ingrediente],\n          pizza: { ...pizza,\n            ingredientes: pizza.ingredientes.filter(({\n              nombre\n            }) => nombre !== action.payload),\n            precio: precioPizza(pizza.ingredientes)\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/marlrus/webDev/habi/la-pizzeria-cosmica/src/components/creador-pizza/creador-pizza.reducer.ts"],"names":["ActionTypes","AGREGAR_INGREDIENTE","REMOVER_INGREDIENTE","agregarIngrediente","nombre","type","payload","removerIngrediente","precioPizza","ingredientes","console","log","reduce","total","ingrediente","precio","creadorPizzaReducer","state","action","pizza","filter"],"mappings":"AAGA,OAAO,MAAMA,WAAW,GAAG;AAC1BC,EAAAA,mBAAmB,EAAE,qBADK;AAE1BC,EAAAA,mBAAmB,EAAE;AAFK,CAApB;AAKP,OAAO,MAAMC,kBAAkB,GAAIC,MAAD,KAAqB;AACtDC,EAAAA,IAAI,EAAEL,WAAW,CAACC,mBADoC;AAEtDK,EAAAA,OAAO,EAAEF;AAF6C,CAArB,CAA3B;AAKP,OAAO,MAAMG,kBAAkB,GAAIH,MAAD,KAAqB;AACtDC,EAAAA,IAAI,EAAEL,WAAW,CAACE,mBADoC;AAEtDI,EAAAA,OAAO,EAAEF;AAF6C,CAArB,CAA3B;;AAKP,MAAMI,WAAW,GAAIC,YAAD,IAAiC;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAF,EAAAA,YAAY,CAACG,MAAb,CACC,CAACC,KAAD,EAAQC,WAAR,KAAyBD,KAAK,IAAIC,WAAW,CAACC,MAD/C,EAEC,CAFD;AAIA,CAND;;AAWA,OAAO,MAAMC,mBAA+D,GAAG,CAC9EC,KAD8E,EAE9EC,MAF8E,KAG1E;AACJ,QAAM;AAAET,IAAAA,YAAF;AAAgBU,IAAAA;AAAhB,MAA0BF,KAAhC;;AACA,UAAQC,MAAM,CAACb,IAAf;AACC,SAAKL,WAAW,CAACC,mBAAjB;AAAsC;AACrC,cAAMa,WAAW,GAAGL,YAAY,CAACW,MAAb,CACnB,CAAC;AAAEhB,UAAAA;AAAF,SAAD,KAAgBA,MAAM,KAAKc,MAAM,CAACZ,OADf,CAApB;AAGA,eAAO,EACN,GAAGW,KADG;AAENR,UAAAA,YAAY,EAAEA,YAAY,CAACW,MAAb,CACb,CAAC;AAAEhB,YAAAA;AAAF,WAAD,KAAgBA,MAAM,KAAKc,MAAM,CAACZ,OADrB,CAFR;AAKNa,UAAAA,KAAK,EAAE,EACN,GAAGA,KADG;AAENV,YAAAA,YAAY,EAAE,CAAC,GAAGU,KAAK,CAACV,YAAV,EAAwB,GAAGK,WAA3B,CAFR;AAGNC,YAAAA,MAAM,EAAEP,WAAW,CAACW,KAAK,CAACV,YAAP;AAHb;AALD,SAAP;AAWA;;AACD,SAAKT,WAAW,CAACE,mBAAjB;AAAsC;AACrC,YAAIgB,MAAM,CAACZ,OAAP,KAAmB,MAAvB,EAA+B,OAAOW,KAAP;AAC/B,cAAMH,WAAW,GAAGL,YAAY,CAACW,MAAb,CACnB,CAAC;AAAEhB,UAAAA;AAAF,SAAD,KAAgBA,MAAM,KAAKc,MAAM,CAACZ,OADf,CAApB;AAGA,eAAO,EACN,GAAGW,KADG;AAENR,UAAAA,YAAY,EAAE,CAAC,GAAGA,YAAJ,EAAkB,GAAGK,WAArB,CAFR;AAGNK,UAAAA,KAAK,EAAE,EACN,GAAGA,KADG;AAENV,YAAAA,YAAY,EAAEU,KAAK,CAACV,YAAN,CAAmBW,MAAnB,CACb,CAAC;AAAEhB,cAAAA;AAAF,aAAD,KAAgBA,MAAM,KAAKc,MAAM,CAACZ,OADrB,CAFR;AAKNS,YAAAA,MAAM,EAAEP,WAAW,CAACW,KAAK,CAACV,YAAP;AALb;AAHD,SAAP;AAWA;;AAED;AACC,aAAOQ,KAAP;AApCF;AAsCA,CA3CM","sourcesContent":["import { CreadorPizzaState, Ingrediente } from './pizza.types';\nimport { Reducer } from 'react';\n\nexport const ActionTypes = {\n\tAGREGAR_INGREDIENTE: 'AGREGAR_INGREDIENTE',\n\tREMOVER_INGREDIENTE: 'REMOVER_INGREDIENTE',\n} as const;\n\nexport const agregarIngrediente = (nombre: string) => ({\n\ttype: ActionTypes.AGREGAR_INGREDIENTE,\n\tpayload: nombre,\n});\n\nexport const removerIngrediente = (nombre: string) => ({\n\ttype: ActionTypes.REMOVER_INGREDIENTE,\n\tpayload: nombre,\n});\n\nconst precioPizza = (ingredientes: Ingrediente[]) => {\n\tconsole.log('in precio pizza');\n\tingredientes.reduce(\n\t\t(total, ingrediente) => (total += ingrediente.precio),\n\t\t0,\n\t);\n};\ntype CreadorActions =\n\t| ReturnType<typeof agregarIngrediente>\n\t| ReturnType<typeof removerIngrediente>;\n\nexport const creadorPizzaReducer: Reducer<CreadorPizzaState, CreadorActions> = (\n\tstate: CreadorPizzaState,\n\taction: CreadorActions,\n) => {\n\tconst { ingredientes, pizza } = state;\n\tswitch (action.type) {\n\t\tcase ActionTypes.AGREGAR_INGREDIENTE: {\n\t\t\tconst ingrediente = ingredientes.filter(\n\t\t\t\t({ nombre }) => nombre === action.payload,\n\t\t\t);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tingredientes: ingredientes.filter(\n\t\t\t\t\t({ nombre }) => nombre !== action.payload,\n\t\t\t\t),\n\t\t\t\tpizza: {\n\t\t\t\t\t...pizza,\n\t\t\t\t\tingredientes: [...pizza.ingredientes, ...ingrediente],\n\t\t\t\t\tprecio: precioPizza(pizza.ingredientes),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\tcase ActionTypes.REMOVER_INGREDIENTE: {\n\t\t\tif (action.payload === 'masa') return state;\n\t\t\tconst ingrediente = ingredientes.filter(\n\t\t\t\t({ nombre }) => nombre === action.payload,\n\t\t\t);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tingredientes: [...ingredientes, ...ingrediente],\n\t\t\t\tpizza: {\n\t\t\t\t\t...pizza,\n\t\t\t\t\tingredientes: pizza.ingredientes.filter(\n\t\t\t\t\t\t({ nombre }) => nombre !== action.payload,\n\t\t\t\t\t),\n\t\t\t\t\tprecio: precioPizza(pizza.ingredientes),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}